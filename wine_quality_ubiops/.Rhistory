winequality <- read.csv("data/winequality-red.csv")
head(winew)
head(winequality)
install.packages("earth")
library(tidymodels)
library(earth)
winequality <- read.csv("data/winequality-red.csv")
split <- initial_split(winequality, prop = 0.8,strata = "quality")
train <- training(split)
test <- testing(split)
## make recipe
rec_wine <-
training(split) %>%
recipe(quality~.) %>%
step_corr(all_predictors()) %>%
step_nzv(all_predictors()) %>%
step_center(all_predictors(), -all_outcomes()) %>%
step_scale(all_predictors(), -all_outcomes()) %>%
prep()
rec_wine
train_scaled <- juice(rec_wine)
test_scaled <- rec_wine %>%
bake(testing(split))
train_scaled
# model with MARS
fit_mars <- mars(mode = "regression") %>%
set_engine("earth") %>%
fit(happiness ~ ., data = train_scaled)
# model with MARS
fit_mars <- mars(mode = "regression") %>%
set_engine("earth") %>%
fit(quality ~ ., data = train_scaled)
fit_mars
renv::snapshot()
# predict
predict(fit_mars, test_scaled)
fit_mars %>%
predict(test_scaled) %>%
bind_cols(test_scaled)
pred_test_mars <- fit_mars %>%
predict(test_scaled) %>%
bind_cols(test_scaled) %>%
rename(actual = quality,
prediction = .pred) %>%
mutate(difference = actual-prediction,
model = 'MARS') %>%
select(model, actual, prediction, difference)
glimpse(pred_test_mars, width = 80)
# evaluate
fit_mars %>%
predict(test_scaled) %>%
bind_cols(test_scaled) %>%
rmse(quality, .pred)
# model with MARS
fit_mars <- mars(mode = "regression") %>%
set_engine("earth") %>%
fit(rec_wine, data = train)
marsmodel <- mars(mode = "regression") %>%
set_engine("earth")
# model with MARS
mars_wf <-
workflow() %>%
add_recipe(rec_wine) %>%
add_model(marsmodel)
fit_mars <- marsmodel %>%
fit(data = train)
fit_mars <- mars_wf %>%
fit(data = train)
fit_mars
pred_test_mars <- fit_mars %>%
predict(test_scaled) %>%
bind_cols(test_scaled) %>%
rename(actual = quality,
prediction = .pred) %>%
mutate(difference = actual-prediction,
model = 'MARS') %>%
select(model, actual, prediction, difference)
glimpse(pred_test_mars, width = 80)
# evaluate
fit_mars %>%
predict(test_scaled) %>%
bind_cols(test_scaled) %>%
rmse(quality, .pred)
#save model
saveRDS(fit_mars,'ubiops_deployment/deployment_package/fit_mars.RDS')
pred_test_mars <- fit_mars %>%
predict(test) %>%
bind_cols(test_scaled) %>%
rename(actual = quality,
prediction = .pred) %>%
mutate(difference = actual-prediction,
model = 'MARS') %>%
select(model, actual, prediction, difference)
glimpse(pred_test_mars, width = 80)
# evaluate
fit_mars %>%
predict(test_scaled) %>%
bind_cols(test_scaled) %>%
rmse(quality, .pred)
# evaluate
fit_mars %>%
predict(test) %>%
bind_cols(test) %>%
rmse(quality, .pred)
# make zip
zip('ubiops_deployment/deployment_package/')
# make zip
zip(zipfile = 'ubiops_deployment/deployment_package.zip',files = list.files("ubiops_deployment/deployment_package/"))
# make zip
zip(zipfile = 'ubiops_deployment/deployment_package.zip',files = list.files("ubiops_deployment/deployment_package/",full.names = "TRUE"))
list.files("ubiops_deployment/deployment_package/",full.names = "TRUE")
getwd()
setwd('ubiops_deployment/')
getwd()
deployment_directory <- 'deployment_package/'
source (file.path(deployment_directory, "deployment.R"))
init
init( base_directory = deployment_directory, context = list() )
input_data <- list(data='../data/winequality-red.csv')
request_result <- request( input_data = input_data, base_directory = deployment_directory, context = list() )
input_data
input_data[["data"]]
read.csv(input_data[["data"]])
deployment_directory
setwd("..")
ls
getwd()
library(recipes)
library(magrittr)
library(workflows)
library(earth)
winequality <- read.csv("data/winequality-red.csv")
split <- initial_split(winequality, prop = 0.8,strata = "quality")
tidymodels::tidymodels_packages()
library(rsample)
split <- initial_split(winequality, prop = 0.8,strata = "quality")
train <- training(split)
test <- testing(split)
## make recipe
rec_wine <-
training(split) %>%
recipe(quality~.) %>%
step_corr(all_predictors()) %>%
step_nzv(all_predictors()) %>%
step_center(all_predictors(), -all_outcomes()) %>%
step_scale(all_predictors(), -all_outcomes()) %>%
prep()
train_scaled <- juice(rec_wine)
test_scaled <- rec_wine %>%
bake(testing(split))
marsmodel <- mars(mode = "regression") %>%
set_engine("earth")
library(parsnip)
marsmodel <- mars(mode = "regression") %>%
set_engine("earth")
# model with MARS
mars_wf <-
workflow() %>%
add_recipe(rec_wine) %>%
add_model(marsmodel)
fit_mars <- mars_wf %>%
fit(data = train)
pred_test_mars <- fit_mars %>%
predict(test) %>%
bind_cols(test_scaled) %>%
rename(actual = quality,
prediction = .pred) %>%
mutate(difference = actual-prediction,
model = 'MARS') %>%
select(model, actual, prediction, difference)
renv::snapshot()
install.packages("renv")
install.packages(c("boot", "class", "cluster", "KernSmooth", "lattice", "MASS", "Matrix", "mgcv", "nnet", "spatial", "survival"), lib="C:/Users/rho30374/AppData/Local/Temp/Rtmpwlx0zS/renv-system-library")
renv::snapshot()
renv::clean()
renv::snapshot()
renv::status()
list(input_data='blabla')
input_data <- list(input_data='blabla')
str(input_data)
names(input_data)
paste0(names(input_data))
paste0(names(input_data),collapse = '& ')
fit_mars <- readRDS('ubiops_deployment/deployment_package/fit_mars.RDS')
fit_mars
print(fit_mars)
summary(fit_mars)
ls
ls()
!"fit_mars" %in% ls()
